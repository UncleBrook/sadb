#!/bin/bash

c_green=$(tput setaf 2)
c_reset=$(tput sgr0)
adb=$(which adb)
config="${HOME}/.config/sadb/"
mkdir -p "$config"

declare -A dic_device
declare -A alias
nums=()

[[ ! -e "${config}.alias" ]] && touch "${config}.alias"

read_alias() {
    while IFS='=' read -r key value; do
        alias["$key"]="$value"
    done < "${config}.alias"
}

remove_alias() {
    if [[ -v alias["$1"] ]]; then
        unset alias["$1"]

        cp "${config}.alias" "${config}.alias.copy"
        > "${config}.alias"

        for key in "${!alias[@]}"; do
            echo "$key=${alias[$key]}" >> "${config}.alias"
        done

        read_alias

        rm "${config}.alias.copy"
    else
        printf "The alias does not contain the \"$1\"\n\n"
        printf "List of alias:\n"
        grep --color -E '^[^=]*|$' "${config}.alias"
    fi
}

exec_adb() {
    local num device args real_args
    num=$(expr $1 + 2)
    device=$(sed -n "${num}p" <<< "$devices")
    args=(${device///})

    real_args="${alias[${adb_args[0]}]}"

    if [[ -z "$real_args" ]]; then
        real_args="${adb_args[@]}"
    else
        real_args="${real_args} ${adb_args[@]:1}"
    fi

    printf "\n${c_green}${adb} ${c_reset}-s ${args[0]} ${real_args}\n\n" >&2
    ${adb} -s ${args[0]} ${real_args}

    printf "\n" >&2
}

choose_device() {
    local total_line num
    total_line=$(( device_count - 2 ))

    printf "\n" >&2
    local tips="More than one device/emulator, please select ${c_green}[0 .. ${total_line}]${c_reset} or ${c_green}[a/A]${c_reset}: "

    while :; do
        read -p "$tips" num
        if [[ " ${nums[*]} " == *" ${num} "* ]]; then
            if [[ "$num" == [aA] ]]; then
                for s in "${nums[@]}"; do
                    [[ "$s" =~ [0-9]+ ]] && exec_adb "$s"
                done
            else
                exec_adb "$num"
            fi
            break
        fi
    done
}

print_devices() {
    devices=$("${adb}" devices -l)
    device_count=$(wc -l <<< "$devices")

    if [ "$device_count" -eq 1 ]; then
        printf "No devices attached \n\n"
        exit 0
    elif [ "$device_count" -eq 2 ]; then
        exec_adb
        exit 0
    else
        echo "$devices" | head -n 1 >&2
        for line in $(seq 2 "$device_count"); do
            num=$(( line - 2 ))
            nums[$num]=$num

            parse_device "$(sed -n "${line}p" <<< "$devices")"

            printf "${c_green}[ %d ]${c_reset} sn: %-20s ${c_reset}%-16s model: %-20s product: %-20s\n" \
                "$num" "${dic_device[sn]}" "${dic_device[device_type]}" "${dic_device[model]}" "${dic_device[product]}" >&2
        done

        nums[${#nums[@]}]=a
        nums[${#nums[@]}]=A
    fi
}

parse_device() {
    local device key value
    device=(${1//\// })
    for ((i = 0; i < ${#device[@]}; i++)); do
        IFS=':' read -r key value <<< "${device[i]}"
        [[ $i -eq 0 ]] && { value="$key"; key="sn"; }
        [[ $i -eq 1 ]] && { value="$key"; key="device_type"; }
        dic_device["$key"]="$value"
    done
}

main() {
    adb_args=("$@")
    case "$1" in
        -s|start-server|kill-server|disconnect|connect)
            "${adb}" "${adb_args[@]}"
            ;;
        devices)
            if [[ $# -eq 1 ]]; then
                adb "${adb_args[@]}" -l
            else
                adb "${adb_args[@]}"
            fi
            ;;
        alias)
            case "$2" in
                -h|--help)
                    print_help
                    ;;
                -l|--list)
                    grep --color -E '^[^=]*|$' "${config}.alias"
                    ;;
                -r|--remove)
                    if [[ -z "$3" ]]; then
                        print_help
                    else
                        remove_alias "$3"
                    fi
                    ;;
                *)
                    print_help
                    ;;
            esac
            ;;
        alias.*)
            if [[ -z "$2" ]]; then
                print_help
            else
                adb_alias "$@"
            fi
            ;;
        *)
            print_devices
            choose_device
            ;;
    esac
}

print_help() {
cat << EOF
Usage: 
    ${0##*/} alias [<options>]
    ${0##*/} alias.<options> [<options>]

Options:
    -h, --help          Display help information and exit
    -l, --list          Display alias and exit
    -r, --remove        Delete alias and exit

Example:
    ${0##*/} alias -r value

EOF
}

adb_alias() {
    echo "$(echo "$1" | cut -d ' ' -f 1 | cut -d '.' -f 2)=${*:2}" >> "${config}.alias"
}

read_alias
main "$@"